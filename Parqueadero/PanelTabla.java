/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Parqueadero;

import java.awt.Desktop;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

import com.lowagie.text.Document;
import com.lowagie.text.Paragraph;
import com.lowagie.text.pdf.PdfWriter;


/**
 *
 * @author Administrador
 */
public class PanelTabla extends javax.swing.JPanel  {

    /**
     * Creates new form PanelTabla
     */
    private ModeloParking modelo;

    public PanelTabla(ModeloParking modelo) {
        initComponents();
        this.modelo = modelo;
        tabla.setModel(modelo);
    }
/*
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        btnfiltromoto = new javax.swing.JLabel();
        btnfiltrocarro = new javax.swing.JLabel();
        btnreiniciar = new javax.swing.JLabel();
        btneliminar = new java.awt.Button();
        btntarifa = new java.awt.Button();
        buscar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        bsfiltro = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        btnabrir1 = new javax.swing.JLabel();
        btnguardar = new javax.swing.JLabel();
        btnimprimir = new javax.swing.JLabel();
        txttarifa = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        jMenu3.setText("File");
        jMenuBar2.add(jMenu3);

        jMenu4.setText("Edit");
        jMenuBar2.add(jMenu4);

        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(800, 550));
        setPreferredSize(new java.awt.Dimension(800, 550));

        btnfiltromoto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/2851755_land_motorbike_motorcycle_transportation_vehicle_icon (1).png"))); // NOI18N
        btnfiltromoto.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnfiltromoto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnfiltromotoMouseClicked(evt);
            }
        });

        btnfiltrocarro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/2851758_car_land_transportation_vehicle_icon (1).png"))); // NOI18N
        btnfiltrocarro.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnfiltrocarro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnfiltrocarroMouseClicked(evt);
            }
        });

        btnreiniciar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/4213447_arrow_load_loading_refresh_reload_icon (2).png"))); // NOI18N
        btnreiniciar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnreiniciar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnreiniciarMouseClicked(evt);
            }
        });

        btneliminar.setBackground(new java.awt.Color(100, 165, 248));
        btneliminar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btneliminar.setLabel("ELIMINAR");
        btneliminar.setName(""); // NOI18N
        btneliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btneliminarActionPerformed(evt);
            }
        });

        btntarifa.setBackground(new java.awt.Color(100, 165, 248));
        btntarifa.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btntarifa.setLabel("TARIFA");
        btntarifa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntarifaActionPerformed(evt);
            }
        });

        buscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/system_search.png"))); // NOI18N
        buscar.setMaximumSize(new java.awt.Dimension(581, 519));
        buscar.setMinimumSize(new java.awt.Dimension(581, 519));
        buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 619, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 322, Short.MAX_VALUE)
        );

        bsfiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bsfiltroActionPerformed(evt);
            }
        });
        bsfiltro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                bsfiltroKeyReleased(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(50, 50, 50));
        jPanel1.setMinimumSize(new java.awt.Dimension(800, 35));

        btnabrir1.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        btnabrir1.setForeground(new java.awt.Color(255, 255, 255));
        btnabrir1.setText("Abrir");
        btnabrir1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnabrir1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnabrir1MouseClicked(evt);
            }
        });

        btnguardar.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        btnguardar.setForeground(new java.awt.Color(255, 255, 255));
        btnguardar.setText("Guardar");
        btnguardar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnguardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnguardarMouseClicked(evt);
            }
        });

        btnimprimir.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        btnimprimir.setForeground(new java.awt.Color(255, 255, 255));
        btnimprimir.setText("Imprimir");
        btnimprimir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnimprimir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnimprimirMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(btnabrir1)
                .addGap(36, 36, 36)
                .addComponent(btnguardar)
                .addGap(18, 18, 18)
                .addComponent(btnimprimir)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnabrir1)
                    .addComponent(btnguardar)
                    .addComponent(btnimprimir))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        txttarifa.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        txttarifa.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txttarifa.setActionCommand("<Not Set>");
        txttarifa.setBorder(null);
        txttarifa.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tabla.setMaximumSize(new java.awt.Dimension(800, 0));
        tabla.setMinimumSize(new java.awt.Dimension(800, 0));
        tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaMouseClicked(evt);
            }
        });
        tabla.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tablaKeyReleased(evt);
            }
        });
        jScrollPane3.setViewportView(tabla);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(173, 173, 173)
                .addComponent(txttarifa, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bsfiltro))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addComponent(btneliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(32, 32, 32)
                                .addComponent(btnfiltrocarro)
                                .addGap(49, 49, 49)
                                .addComponent(btnreiniciar)
                                .addGap(45, 45, 45)
                                .addComponent(btnfiltromoto)
                                .addGap(34, 34, 34)
                                .addComponent(btntarifa, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 801, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txttarifa, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bsfiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(169, 169, 169))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnfiltrocarro)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btntarifa, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(49, 49, 49)
                                            .addComponent(btneliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(btnfiltromoto)
                                            .addComponent(btnreiniciar))))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btntarifaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntarifaActionPerformed
    int selectedRow = tabla.getSelectedRow();
    if (selectedRow != -1)
    {
        Parking aux = modelo.getParking(selectedRow);
        if (aux.getFechaSalida() == null) {
            JOptionPane.showMessageDialog(this, "No se puede calcular la tarifa si el vehículo no ha salido", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            long diferenciaEnMilisegundos = aux.getFechaSalida().getTime() - aux.getFechaIngreso().getTime();
            long diferenciaEnSegundos = diferenciaEnMilisegundos / 1000;
            double horas = (double) diferenciaEnSegundos / 3600;
            double TARIFA_POR_HORA;
            if (aux.getTarifa().equals("CARROXHORA")) {
                TARIFA_POR_HORA = 12000;
            } else {
                TARIFA_POR_HORA = 6000;
            }
            double tarifa = horas * TARIFA_POR_HORA;
            int tarifaRedondeada = (int) Math.round(tarifa);
            txttarifa.setText("$" + tarifaRedondeada + " COP");
            }
        }
    }//GEN-LAST:event_btntarifaActionPerformed

    private void btneliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneliminarActionPerformed
        if (tabla.getSelectedRow() != -1) {
            modelo.removeDatos(tabla.getSelectedRow());
        
    }//GEN-LAST:event_btneliminarActionPerformed
    }
    private void btnfiltrocarroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnfiltrocarroMouseClicked
            TableRowSorter<TableModel> sorter = new TableRowSorter<>(tabla.getModel());
            tabla.setRowSorter(sorter);
            int columnIndex = 2;
            RowFilter<TableModel, Object> filter = new RowFilter<TableModel, Object>() {
                @Override
                public boolean include(RowFilter.Entry<? extends TableModel, ? extends Object> entry) {
                    return entry.getStringValue(columnIndex).equals("Carro");
                }
            };
            sorter.setRowFilter(filter);    
    }//GEN-LAST:event_btnfiltrocarroMouseClicked

    private void btnfiltromotoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnfiltromotoMouseClicked
            TableRowSorter<TableModel> sorter = new TableRowSorter<>(tabla.getModel());
            tabla.setRowSorter(sorter);
            int columnIndex = 2;
            RowFilter<TableModel, Object> filter = new RowFilter<TableModel, Object>() {
                @Override
                public boolean include(Entry<? extends TableModel, ? extends Object> entry) {
                    return entry.getStringValue(columnIndex).equals("Moto");
                }
            };
            sorter.setRowFilter(filter);
    }//GEN-LAST:event_btnfiltromotoMouseClicked

    private void btnguardarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnguardarMouseClicked
        int opcionSeleccionada = JOptionPane.showConfirmDialog(this, "¿Estás seguro de que deseas guardar el archivo?", "Guardar", JOptionPane.YES_NO_OPTION);
        if (opcionSeleccionada == JOptionPane.YES_OPTION) {
            String fileName = ("empleado.csv");
            File file = new File(fileName);

            try {
                FileWriter fw = new FileWriter(file);
                PrintWriter pw = new PrintWriter(fw);

                modelo.getParkings();
                StringBuilder sb=new StringBuilder ();
                for (Parking empleado : modelo.getParkings()) {
                    sb.append(empleado).append('\n');
                }

                for (int i=0; i <modelo.getParkings().size();i++){
                    pw.write(modelo.getParkings().get(i).toString());
                    pw.write('\n');
                }
                fw.close();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnguardarMouseClicked

    private void btnabrir1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnabrir1MouseClicked

        FileReader fr = null;
        try {
            File archivo = new File("empleado.csv");
            fr = new FileReader(archivo);
            BufferedReader br = new BufferedReader(fr);
            String linea;
            while ((linea = br.readLine()) != null) {
                String[] result = linea.split(",");
                String id = result[0];
                String nombre = result[1];
                String apellido = result[2];
                String placa = result[3];
                SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
                String fechaIngresoToString = result[4].replace(";", "");
                String fechaSalidaToString = result[5].replace(";", "");
                Date fechaEntrada = null;
                Date fechaSalida = null;
                try {
                    fechaEntrada = formato.parse(fechaIngresoToString);
                    if (fechaSalidaToString.equals("No hay vehiculo")) {
                        fechaSalida = null;
                    } else {
                        fechaSalida = formato.parse(fechaSalidaToString);
                    }
                } catch (ParseException ex) {
                    Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                }

                System.out.println("" + id + " " + nombre + " " + apellido + " " + placa + " " + fechaEntrada + " " + fechaSalida + " " + "\n");
                Parking e = new Parking(id, nombre, apellido, placa, fechaEntrada, fechaSalida);
                modelo.addDatos(e);
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(null).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(null).log(Level.SEVERE, null, ex);
        } finally {
            try {
                fr.close();
            } catch (IOException ex) {
                Logger.getLogger(null).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnabrir1MouseClicked

    private void bsfiltroKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bsfiltroKeyReleased
        filtro(bsfiltro.getText());
    }//GEN-LAST:event_bsfiltroKeyReleased

    private void bsfiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bsfiltroActionPerformed

    }//GEN-LAST:event_bsfiltroActionPerformed

    private void tablaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tablaKeyReleased

    }//GEN-LAST:event_tablaKeyReleased

    private void tablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaMouseClicked

    }//GEN-LAST:event_tablaMouseClicked

    private void buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarActionPerformed
        Object[] colData = new Object[tabla.getRowCount()];
        for (int i = 0; i < tabla.getRowCount(); i++) {
            colData[i] = tabla.getValueAt(i, 0);
        }

        for (int i = 0; i < tabla.getRowCount(); i++) {

            System.out.println("" + colData[i]);
        }
    }//GEN-LAST:event_buscarActionPerformed

    private void btnreiniciarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnreiniciarMouseClicked
          resetFilter();
    }//GEN-LAST:event_btnreiniciarMouseClicked

    private void btnimprimirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnimprimirMouseClicked
        int selectedRow = tabla.getSelectedRow();
        if (selectedRow != -1) {
            String tarifa = (String) tabla.getValueAt(selectedRow, 0);
            String nombre = (String) tabla.getValueAt(selectedRow, 1);
            String vehiculo = (String) tabla.getValueAt(selectedRow, 2);
            String placa = (String) tabla.getValueAt(selectedRow, 3);
            String entrada = (String) tabla.getValueAt(selectedRow, 4);
            String salida = (String) tabla.getValueAt(selectedRow, 5);

            double precio = 0;
        if (!salida.equals("No ha salido")) {
            Parking aux = modelo.getParking(selectedRow);
            long diferenciaEnMilisegundos = aux.getFechaSalida().getTime() - aux.getFechaIngreso().getTime();
            long diferenciaEnSegundos = diferenciaEnMilisegundos / 1000;
            double horas = (double) diferenciaEnSegundos / 3600;
            double TARIFA_POR_HORA;
            if (aux.getTarifa().equals("CARROXHORA")) {
                TARIFA_POR_HORA = 12000;
            } else {
                TARIFA_POR_HORA = 6000;
            }
            precio = (int) Math.round(horas * TARIFA_POR_HORA);
        }
            Document document = new Document();
            try {
               PdfWriter.getInstance(document, new FileOutputStream("recibo.pdf"));
                document.open();
                document.add(new Paragraph("Recibo:"));
                document.add(new Paragraph("Tarifa: " + tarifa));
                document.add(new Paragraph("Nombre: " + nombre));
                document.add(new Paragraph("Vehiculo: " + vehiculo));
                document.add(new Paragraph("Placa: " + placa));
                document.add(new Paragraph("Entrada: " + entrada));
                document.add(new Paragraph("Salida: " + salida));
                document.add(new Paragraph("Precio: " + precio));
                document.close();
            } catch (Exception ex) {
                ex.printStackTrace();
            }
            File pdfFile = new File("recibo.pdf");
            if (Desktop.isDesktopSupported()) {
                try {
                    Desktop.getDesktop().open(pdfFile);
                } catch (IOException ex) {
                }
            }
        } 
    }//GEN-LAST:event_btnimprimirMouseClicked
    private void filtro(String query) {
        TableRowSorter<ModeloParking> tr = new TableRowSorter<>(modelo);
        tabla.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(query));
    }
    public void actualizarTabla() {
    ModeloParking modelo = (ModeloParking) tabla.getModel();
    modelo.fireTableDataChanged();
    }
    
    private void resetFilter() {
    TableRowSorter<TableModel> sorter = (TableRowSorter<TableModel>) tabla.getRowSorter();
    if (sorter != null) {
        sorter.setRowFilter(null);
    }
}


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField bsfiltro;
    private javax.swing.JLabel btnabrir1;
    private java.awt.Button btneliminar;
    private javax.swing.JLabel btnfiltrocarro;
    private javax.swing.JLabel btnfiltromoto;
    private javax.swing.JLabel btnguardar;
    private javax.swing.JLabel btnimprimir;
    private javax.swing.JLabel btnreiniciar;
    private java.awt.Button btntarifa;
    private javax.swing.JButton buscar;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tabla;
    private javax.swing.JTextField txttarifa;
    // End of variables declaration//GEN-END:variables


}